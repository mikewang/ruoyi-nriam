<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.logis.mapper.LogisContractMapper">
  <resultMap id="BaseResultMap" type="LogisContract">
    <result column="contract_id" jdbcType="BIGINT" property="contractId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="contract_no" jdbcType="VARCHAR" property="contractNo" />
    <result column="contract_name" jdbcType="VARCHAR" property="contractName" />
    <result column="contract_file" jdbcType="VARCHAR" property="contractFile" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
  </resultMap>

  <resultMap id="BaseResultMap" type="com.ruoyi.logis.domain.BasDoc">
    <id column="DocID" jdbcType="INTEGER" property="docid" />
    <result column="DocName" jdbcType="VARCHAR" property="docname" />
    <result column="RelativePath" jdbcType="VARCHAR" property="relativepath" />
    <result column="AttachToType" jdbcType="VARCHAR" property="attachtotype" />
    <result column="RelatedID" jdbcType="INTEGER" property="relatedid" />
    <result column="DocType" jdbcType="VARCHAR" property="doctype" />
  </resultMap>

  <sql id="selectContractVo">
    select contract_id, user_id, contract_no, contract_name, contract_file, status, created
    from logis_contract
  </sql>

  <select id="selectLogisContractList" parameterType="LogisContract" resultMap="BaseResultMap">
    <include refid="selectContractVo"/>
    where 1 = 1
    <if test="contractNo != null and contractNo != ''">
      AND contract_no like concat('%', #{contractNo}, '%')
    </if>
    <if test="contractName != null and contractName != ''">
      AND contract_name like concat('%', #{contractName}, '%')
    </if>
    <if test="status != null and status != ''">
      AND status = #{status}
    </if>
    <!-- 数据范围过滤 -->
    order by created desc
  </select>

  <select id="selectLogisContractById" parameterType="Long" resultMap="BaseResultMap">
    <include refid="selectContractVo"/>
    where contract_id = #{contractId}
  </select>

  <insert id="insertLogisContract" parameterType="LogisContract">
    insert into logis_contract (user_id, contract_no,
      contract_name, contract_file, status, 
      created)
    values (#{userId,jdbcType=BIGINT}, #{contractNo,jdbcType=VARCHAR},
      #{contractName,jdbcType=VARCHAR}, #{contractFile,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, 
      #{created,jdbcType=TIMESTAMP})
  </insert>


  <update id="updateLogisContract" parameterType="LogisContract">
    update logis_contract
    <set>
      <if test="userId != null and userId != 0">user_id = #{userId},</if>
      <if test="contractNo != null and contractNo != ''">contract_no = #{contractNo},</if>
      <if test="contractName != null and contractName != ''">contract_name = #{contractName},</if>
      <if test="contractFile != null and contractFile != ''">contract_file = #{contractFile},</if>
      <if test="status != null and status != ''">status = #{status},</if>
      <if test="created != null ">created = #{created,jdbcType=TIMESTAMP},</if>
    </set>
    where contract_id = #{contractId}
  </update>

</mapper>