<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.audit.mapper.AudApplyMapper">
    <resultMap id="BaseResultMap" type="com.ruoyi.audit.domain.AudApply">
        <id column="ApplyID" jdbcType="INTEGER" property="applyid"/>
        <result column="ApplyType" jdbcType="VARCHAR" property="applytype"/>
        <result column="RelatedID" jdbcType="INTEGER" property="relatedid"/>
        <result column="ApplyUserID" jdbcType="INTEGER" property="applyuserid"/>
        <result column="ApplyTime" jdbcType="VARCHAR" property="applytime"/>
        <result column="ApplyReason" jdbcType="VARCHAR" property="applyreason"/>
        <result column="AuditUserID" jdbcType="INTEGER" property="audituserid"/>
        <result column="AuditTime" jdbcType="VARCHAR" property="audittime"/>
        <result column="AuditOpinion" jdbcType="VARCHAR" property="auditopinion"/>
        <result column="ApplyStatus" jdbcType="INTEGER" property="applystatus"/>
    </resultMap>

  <resultMap id="AchieveResultMap" type="com.ruoyi.audit.domain.AudApplyAchieve">
    <id column="ApplyID" jdbcType="INTEGER" property="applyid"/>
    <result column="ApplyType" jdbcType="VARCHAR" property="applytype"/>
    <result column="RelatedID" jdbcType="INTEGER" property="relatedid"/>
    <result column="ApplyUserID" jdbcType="INTEGER" property="applyuserid"/>
    <result column="ApplyTime" jdbcType="VARCHAR" property="applytime"/>
    <result column="ApplyReason" jdbcType="VARCHAR" property="applyreason"/>
    <result column="AuditUserID" jdbcType="INTEGER" property="audituserid"/>
    <result column="AuditTime" jdbcType="VARCHAR" property="audittime"/>
    <result column="AuditOpinion" jdbcType="VARCHAR" property="auditopinion"/>
    <result column="ApplyStatus" jdbcType="INTEGER" property="applystatus"/>
    <result column="real_name" jdbcType="VARCHAR" property="realName"/>
    <result column="name" jdbcType="VARCHAR" property="name"/>
    <result column="teamid" jdbcType="INTEGER" property="teamid"/>
      <result column="status" jdbcType="INTEGER" property="status"/>
      <result column="statuslinktext" jdbcType="VARCHAR" property="statuslinktext"/>
  </resultMap>

    <select id="selectAudApplyById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select ApplyID,
               ApplyType,
               RelatedID,
               ApplyUserID,
               ApplyTime,
               ApplyReason,
               AuditUserID,
               AuditTime,
               AuditOpinion,
               ApplyStatus
        from Aud_Apply
        where ApplyID = #{applyid,jdbcType=INTEGER}
    </select>

    <select id="selectApplyByTypeAndRelatedID" parameterType="com.ruoyi.audit.domain.AudApply"
            resultMap="BaseResultMap">
        select top 1 ApplyID,
               ApplyType,
               RelatedID,
               ApplyUserID,
               ApplyTime,
               ApplyReason,
               AuditUserID,
               AuditTime,
               AuditOpinion,
               ApplyStatus
        from Aud_Apply
        where ApplyType = #{applytype,jdbcType=VARCHAR}
          and RelatedID = #{relatedid,jdbcType=INTEGER}
        order by ApplyID desc
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from Aud_Apply
        where ApplyID = #{applyid,jdbcType=INTEGER}
    </delete>
    <insert id="insertAudApply" parameterType="com.ruoyi.audit.domain.AudApply" useGeneratedKeys="true"
            keyProperty="applyid">
        insert into Aud_Apply (ApplyType, RelatedID,
                               ApplyUserID, ApplyTime, ApplyReason,
                               AuditUserID, AuditTime, AuditOpinion,
                               ApplyStatus)
        values (#{applytype,jdbcType=VARCHAR}, #{relatedid,jdbcType=INTEGER},
                #{applyuserid,jdbcType=INTEGER}, #{applytime,jdbcType=VARCHAR}, #{applyreason,jdbcType=VARCHAR},
                #{audituserid,jdbcType=INTEGER}, #{audittime,jdbcType=VARCHAR}, #{auditopinion,jdbcType=VARCHAR},
                #{applystatus,jdbcType=INTEGER})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.ruoyi.audit.domain.AudApply">
        update Aud_Apply
        set ApplyType    = #{applytype,jdbcType=VARCHAR},
            RelatedID    = #{relatedid,jdbcType=INTEGER},
            ApplyUserID  = #{applyuserid,jdbcType=INTEGER},
            ApplyTime    = #{applytime,jdbcType=VARCHAR},
            ApplyReason  = #{applyreason,jdbcType=VARCHAR},
            AuditUserID  = #{audituserid,jdbcType=INTEGER},
            AuditTime    = #{audittime,jdbcType=VARCHAR},
            AuditOpinion = #{auditopinion,jdbcType=VARCHAR},
            ApplyStatus  = #{applystatus,jdbcType=INTEGER}
        where ApplyID = #{applyid,jdbcType=INTEGER}
    </update>

    <select id="selectAll" resultMap="BaseResultMap">
        select ApplyID,
               ApplyType,
               RelatedID,
               ApplyUserID,
               ApplyTime,
               ApplyReason,
               AuditUserID,
               AuditTime,
               AuditOpinion,
               ApplyStatus
        from Aud_Apply
    </select>

    <!--  成果审核申请表 -->

    <select id="selectAchieveToConfirmList" parameterType="HashMap" resultMap="AchieveResultMap">
        select a.ApplyID
        ,a.ApplyType
        ,a.RelatedID
        ,a.ApplyUserID
        ,a.ApplyTime
        ,a.ApplyReason
        ,a.AuditUserID
        ,a.AuditTime
        ,a.AuditOpinion
        ,a.ApplyStatus
        ,b.real_name
        ,c.name
        ,c.teamid
        ,c.status
        ,d.dict_label AS StatusLinkText
        from Aud_Apply a left join sys_user b on a.ApplyUserID = b.user_id
        join
        <foreach item="item" index="index" collection="achieveTypeOptions" open="(" separator=" union all " close=")">
            <if test="item == '专利' ">
                select * from (select #{item} as achievetype, PatentID as id, PatentName as name,teamid,status from
                ACH_Patent) v1 where 0 = 0
                <if test="teamid != null and teamid != 0 ">
                    and TeamID = #{teamid,jdbcType=INTEGER}
                </if>
                <if test="name != null and name != '' ">
                    and name like concat('%', #{name}, '%')
                </if>
            </if>
            <if test="item == '学术论文' ">
                select * from (select #{item} as achievetype, ThesisID as id, ThesisName as name,teamid ,status from
                ACH_Thesis) v1 where 0 = 0
                <if test="teamid != null and teamid != 0 ">
                    and TeamID = #{teamid,jdbcType=INTEGER}
                </if>
                <if test="name != null and name != '' ">
                    and name like concat('%', #{name}, '%')
                </if>
            </if>
            <if test="item == '著作' ">
                select * from (select #{item} as achievetype, ArticleID as id, ArticleName as name,teamid,status from
                ACH_ARTICLE) v1 where 0 = 0
                <if test="teamid != null and teamid != 0 ">
                    and TeamID = #{teamid,jdbcType=INTEGER}
                </if>
                <if test="name != null and name != '' ">
                    and name like concat('%', #{name}, '%')
                </if>
            </if>
            <if test="item == '获奖成果' ">
                select * from (select #{item} as achievetype, PRIZEid as id, PrizeName as name,teamid,status from
                ach_PRIZE) v1 where 0 = 0
                <if test="teamid != null and teamid != 0 ">
                    and TeamID = #{teamid,jdbcType=INTEGER}
                </if>
                <if test="name != null and name != '' ">
                    and name like concat('%', #{name}, '%')
                </if>
            </if>
            <if test="item == '标准' ">
                select * from (select #{item} as achievetype, StandardID as id, StandardName as name,teamid,status from
                ACH_Standard) v1 where 0 = 0
                <if test="teamid != null and teamid != 0 ">
                    and TeamID = #{teamid,jdbcType=INTEGER}
                </if>
                <if test="name != null and name != '' ">
                    and name like concat('%', #{name}, '%')
                </if>
            </if>
            <if test="item == '软件著作权' ">
                select * from (select #{item} as achievetype, Softwareid as id, SoftwareName as name,teamid,status from
                ACH_Software) v1 where 0 = 0
                <if test="teamid != null and teamid != 0 ">
                    and TeamID = #{teamid,jdbcType=INTEGER}
                </if>
                <if test="name != null and name != '' ">
                    and name like concat('%', #{name}, '%')
                </if>
            </if>
            <if test="item == '农机新产品' ">
                select * from (select #{item} as achievetype, Productid as id, ProductName as name,teamid,status from
                ACH_Product) v1 where 0 = 0
                <if test="teamid != null and teamid != 0 ">
                    and TeamID = #{teamid,jdbcType=INTEGER}
                </if>
                <if test="name != null and name != '' ">
                    and name like concat('%', #{name}, '%')
                </if>
            </if>
            <if test="item == '农业部主推技术' ">
                select * from (select #{item} as achievetype, Techid as id, TechName as name,teamid,status from
                ACH_Tech) v1 where 0 = 0
                <if test="teamid != null and teamid != 0 ">
                    and TeamID = #{teamid,jdbcType=INTEGER}
                </if>
                <if test="name != null and name != '' ">
                    and name like concat('%', #{name}, '%')
                </if>
            </if>
            <if test="item == '鉴定（评价）成果' ">
                select * from (select #{item} as achievetype, APPRAISALid as id, APPRAISALName as name,teamid,status from
                ach_APPRAISAL) v1 where 0 = 0
                <if test="teamid != null and teamid != 0 ">
                    and TeamID = #{teamid,jdbcType=INTEGER}
                </if>
                <if test="name != null and name != '' ">
                    and name like concat('%', #{name}, '%')
                </if>
            </if>

        </foreach>
        as c  on a.applytype = c.achievetype and a.RelatedID = c.id
        JOIN (
        SELECT *
        FROM sys_dict_data
        WHERE dict_type = '科技成果状态'
        ) d on c.status = d.dict_value
        where a.ApplyStatus = 0
        order by a.ApplyTime desc
    </select>


</mapper>